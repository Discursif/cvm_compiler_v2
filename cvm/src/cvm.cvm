use "../lib/std";

fn adde(Bytes a) -> String {
    return a + 1 10 as String;
}

fn assert(Bytes a, Bytes b) {
    if a == b {
        print("Test passed!"~10);
    } else {
        print("Error occured in test:" ~ 10~"  Expected "~(b.to_string())~10~"  Found "~(a.to_string()));
        print(10);
    }
}

fn is_correct(Bytes a) -> Boolean {
    Byte incp = 0;
    Byte incc = 0;
    Byte incb = 0;
    Byte le = len(a);
    loop {
        if le == 0 => break;
        le -= 1;
        if a[le] == "(" {
            incp += 1;
            continue;
        }
        if a[le] == ")" {
            incp -= 1;
            continue;
        }
        if a[le] == "{" {
            incb += 1;
            continue;
        }
        if a[le] == "[" {
            incc += 1;
            continue;
        }
        if a[le] == "]" {
            incc += 1;
            continue;
        }
        if a[le] == "}" {
            incb -= 1;
            continue;
        }
    }
    return (incp == 0).mul(incb == 0).mul(incc == 0) as Boolean;
}

fn main() {
    print("Enter your ()[]{} containing expression:"~10);
    print("Parenthesis ok: " ~is_correct(input()).to_string()~10);
}